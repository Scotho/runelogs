(()=>{"use strict";var e={3839:(e,t,n)=>{let a=function(e){return e.LOG_VERSION="Log Version",e.LOGGED_IN_PLAYER="Logged In Player",e.BOOSTED_LEVELS="Boosted Levels",e.PLAYER_EQUIPMENT="Player Equipment",e.DEATH="Death",e.TARGET_CHANGE="Target Change",e.DAMAGE="Damage",e}({});let r=function(e){return e[e.BLOCK_ME=12]="BLOCK_ME",e[e.DAMAGE_ME=16]="DAMAGE_ME",e[e.DAMAGE_ME_CYAN=18]="DAMAGE_ME_CYAN",e[e.DAMAGE_ME_ORANGE=20]="DAMAGE_ME_ORANGE",e[e.DAMAGE_ME_YELLOW=22]="DAMAGE_ME_YELLOW",e[e.DAMAGE_ME_WHITE=24]="DAMAGE_ME_WHITE",e[e.SPLASH_ME=69]="SPLASH_ME",e}({}),o=function(e){return e[e.DAMAGE_MAX_ME=43]="DAMAGE_MAX_ME",e[e.DAMAGE_MAX_ME_CYAN=44]="DAMAGE_MAX_ME_CYAN",e[e.DAMAGE_MAX_ME_ORANGE=45]="DAMAGE_MAX_ME_ORANGE",e[e.DAMAGE_MAX_ME_YELLOW=46]="DAMAGE_MAX_ME_YELLOW",e[e.DAMAGE_MAX_ME_WHITE=47]="DAMAGE_MAX_ME_WHITE",e}({});const i=e=>{const[t,n,a]=e.split(":").map(Number);return 36e5*t+6e4*n+1e3*a};function s(e){const t=Math.floor(e%1e3);let n=Math.floor(e/1e3%60),a=Math.floor(e/6e4%60),r=Math.floor(e/36e5%24);r=r<10?"0"+r:r,a=a<10?"0"+a:a,n=n<10?"0"+n:n;return r+":"+a+":"+n+"."+(t<10?"00"+t:t<100?"0"+t:t)}const c=["Scurrius","Kree'arra","Commander Zilyana","General Graardor","K'ril Tsutsaroth","Nex","Kalphite Queen","Sarachnis","Scorpia","Abyssal Sire","Kraken"];function l(e){return Object.values(r).includes(e.hitsplatName)||Object.values(o).includes(e.hitsplatName)||"BLOCK_ME"===e.hitsplatName}const E=e=>{const t=".*",n="[^\\t]*",r=new RegExp("^(".concat("\\d{2}-\\d{2}-\\d{4}",") (").concat("\\d{2}:\\d{2}:\\d{2}\\.\\d{3}",") (").concat("\\w+",")\t(").concat(t,")"));let o=e.match(r);if(!o)return console.error("Invalid log line format:",e),null;const[,i,s,c,l]=o,E=new RegExp("Log Version (".concat(t,")"));if(o=l.match(E),o){const[,e]=o;return console.log("Log Version ".concat(e)),{type:a.LOG_VERSION,date:i,time:s,timezone:c,logVersion:e}}const m=new RegExp("Logged in player is (".concat(t,")"));if(o=l.match(m),o){const[,e]=o;return{type:a.LOGGED_IN_PLAYER,date:i,time:s,timezone:c,loggedInPlayer:e}}const p=new RegExp("Boosted levels are \\[(\\d+), (\\d+), (\\d+), (\\d+), (\\d+), (\\d+), (\\d+)\\]");if(o=l.match(p),o){const[,e,t,n,r,l,E,m]=o.map(Number);return{type:a.BOOSTED_LEVELS,date:i,time:s,timezone:c,boostedLevels:{attack:e,strength:t,defence:n,ranged:r,magic:l,hitpoints:E,prayer:m}}}const u=new RegExp("Player equipment is (".concat(t,")"));if(o=l.match(u),o){const[,e]=o,t=JSON.parse(e).map((e=>e.toString()));return{type:a.PLAYER_EQUIPMENT,date:i,time:s,timezone:c,playerEquipment:t}}const g=new RegExp("^(".concat(t,") dies"));if(o=l.match(g),o){const[,e]=o;return{type:a.DEATH,date:i,time:s,timezone:c,target:e}}const A=new RegExp("^(".concat(t,") changes target to (").concat(t,")"));if(o=l.match(A),o){const[,e,t]=o;return{type:a.TARGET_CHANGE,date:i,time:s,timezone:c,source:e,target:t}}const d=new RegExp("^(".concat(n,")\t(").concat(n,")\t(").concat(n,")"));if(o=l.match(d),!o)return console.error("Invalid log line format:",e),null;const[,M,_,f]=o;return{type:a.DAMAGE,date:i,time:s,timezone:c,target:M,hitsplatName:_,damageAmount:parseInt(f,10)}};function m(e,t){try{const n=e.split("\n");let r=0,o=[];for(const e of n){const a=E(e.trim());if(a&&o.push(a),r++,t&&r%200===0){t(r/n.length*50)}}let m=function(e,t){const n=e.length;let r=0;const o=[];let E,m,p,u=null,g="",A=null;for(const M of e){if(M.type===a.LOGGED_IN_PLAYER&&(g=M.loggedInPlayer),M.type===a.BOOSTED_LEVELS&&(E=M.boostedLevels),M.type===a.PLAYER_EQUIPMENT&&(m=M.playerEquipment),u&&A&&i(M.time)-i(A.time)>6e4&&(u.data=u.data.filter(((e,t)=>t<=A.index)),u.name+=" - Incomplete",u.lastLine=u.data[u.data.length-1],o.push(u),u=null,A=null),!u&&M.type===a.DAMAGE&&l(M)&&M.target!==g){p=new Date(M.date+" "+M.time),M.fightTime=s(0);const e=[];E&&e.push({type:a.BOOSTED_LEVELS,date:M.date,time:M.time,timezone:M.timezone,boostedLevels:E,fightTime:s(0)}),m&&e.push({type:a.PLAYER_EQUIPMENT,date:M.date,time:M.time,timezone:M.timezone,playerEquipment:m,fightTime:s(0)}),u={name:M.target,enemies:[M.target],data:[...e,M],loggedInPlayer:g,firstLine:M,lastLine:M}}else if(u){"target"in M&&c.includes(M.target)&&u.name!==M.target&&(u.name=M.target),M.type===a.DAMAGE&&l(M)&&M.target!==g&&!u.enemies.includes(M.target)&&u.enemies.push(M.target);const e=new Date(M.date+" "+M.time);M.fightTime=s(e.getTime()-p.getTime()),u.data.push(M)}u&&M.type===a.DAMAGE&&l(M)&&(A={time:M.time,index:u.data.length-1}),M.type===a.DEATH&&M.target&&(!u||M.target!==u.name&&M.target!==u.loggedInPlayer||(u.lastLine=M,o.push(u),u=null)),r++,t&&r%200===0&&t(50+r/n*50)}u&&(u.lastLine=u.data[u.data.length-1],o.push(u));const d=new Map;return o.filter((e=>{if(!e.data.some((e=>e.type===a.DAMAGE&&l(e))))return!1;let t=1;return d.has(e.name)&&(t=d.get(e.name)+1),d.set(e.name,t),e.name="".concat(e.name," - ").concat(t),!0}))}(o,t);return m}catch(n){return console.error("Error parsing file content:",n),null}}var p=n(340);const u=n.n(p)().createInstance({name:"myFightData"});onmessage=e=>{const{type:t,fileContent:n,index:a}=e.data;"parse"===t?function(e){const t=m(e,(e=>{postMessage({type:"progress",progress:e})})),n={fightNames:(null===t||void 0===t?void 0:t.map((e=>e.name)))||[],firstResult:t[0]};postMessage({type:"parseResult",parseResultMessage:n}),u.setItem("fightData",t)}(n):"getItem"===t&&function(e){u.getItem("fightData").then((t=>t&&e>=0&&e<t.length?t[e]:null)).then((e=>{postMessage({type:"item",item:e})})).catch((e=>{console.error("Error getting specific item:",e)}))}(a)}}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var o=t[a]={exports:{}};return e[a](o,o.exports,n),o.exports}n.m=e,n.x=()=>{var e=n.O(void 0,[340],(()=>n(3839)));return e=n.O(e)},(()=>{var e=[];n.O=(t,a,r,o)=>{if(!a){var i=1/0;for(E=0;E<e.length;E++){a=e[E][0],r=e[E][1],o=e[E][2];for(var s=!0,c=0;c<a.length;c++)(!1&o||i>=o)&&Object.keys(n.O).every((e=>n.O[e](a[c])))?a.splice(c--,1):(s=!1,o<i&&(i=o));if(s){e.splice(E--,1);var l=r();void 0!==l&&(t=l)}}return t}o=o||0;for(var E=e.length;E>0&&e[E-1][2]>o;E--)e[E]=e[E-1];e[E]=[a,r,o]}})(),n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,a)=>(n.f[a](e,t),t)),[])),n.u=e=>"static/js/"+e+".5989bce5.chunk.js",n.miniCssF=e=>{},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.p="/",(()=>{var e={220:1};n.f.i=(t,a)=>{e[t]||importScripts(n.p+n.u(t))};var t=self.webpackChunkrunelogs=self.webpackChunkrunelogs||[],a=t.push.bind(t);t.push=t=>{var r=t[0],o=t[1],i=t[2];for(var s in o)n.o(o,s)&&(n.m[s]=o[s]);for(i&&i(n);r.length;)e[r.pop()]=1;a(t)}})(),(()=>{var e=n.x;n.x=()=>n.e(340).then(e)})();n.x()})();
//# sourceMappingURL=220.0bda8cf8.chunk.js.map