(()=>{"use strict";let e=function(e){return e.LOG_VERSION="Log Version",e.LOGGED_IN_PLAYER="Logged In Player",e.BOOSTED_LEVELS="Boosted Levels",e.PLAYER_EQUIPMENT="Player Equipment",e.DEATH="Death",e.TARGET_CHANGE="Target Change",e.DAMAGE="Damage",e}({});let t=function(e){return e[e.BLOCK_ME=12]="BLOCK_ME",e[e.DAMAGE_ME=16]="DAMAGE_ME",e[e.DAMAGE_ME_CYAN=18]="DAMAGE_ME_CYAN",e[e.DAMAGE_ME_ORANGE=20]="DAMAGE_ME_ORANGE",e[e.DAMAGE_ME_YELLOW=22]="DAMAGE_ME_YELLOW",e[e.DAMAGE_ME_WHITE=24]="DAMAGE_ME_WHITE",e[e.SPLASH_ME=69]="SPLASH_ME",e}({}),n=function(e){return e[e.DAMAGE_MAX_ME=43]="DAMAGE_MAX_ME",e[e.DAMAGE_MAX_ME_CYAN=44]="DAMAGE_MAX_ME_CYAN",e[e.DAMAGE_MAX_ME_ORANGE=45]="DAMAGE_MAX_ME_ORANGE",e[e.DAMAGE_MAX_ME_YELLOW=46]="DAMAGE_MAX_ME_YELLOW",e[e.DAMAGE_MAX_ME_WHITE=47]="DAMAGE_MAX_ME_WHITE",e}({});const a=e=>{const[t,n,a]=e.split(":").map(Number);return 36e5*t+6e4*n+1e3*a};function o(e){const t=Math.floor(e%1e3);let n=Math.floor(e/1e3%60),a=Math.floor(e/6e4%60),o=Math.floor(e/36e5%24);o=o<10?"0"+o:o,a=a<10?"0"+a:a,n=n<10?"0"+n:n;return o+":"+a+":"+n+"."+(t<10?"00"+t:t<100?"0"+t:t)}const r=["Scurrius","Kree'arra","Commander Zilyana","General Graardor","K'ril Tsutsaroth","Nex","Kalphite Queen","Sarachnis","Scorpia","Abyssal Sire"];function s(e){return Object.values(t).includes(e.hitsplatName)||Object.values(n).includes(e.hitsplatName)||"BLOCK_ME"===e.hitsplatName}const i=t=>{const n=".*",a="[^\\t]*",o=new RegExp("^(".concat("\\d{2}-\\d{2}-\\d{4}",") (").concat("\\d{2}:\\d{2}:\\d{2}\\.\\d{3}",") (").concat("\\w+",")\t(").concat(n,")"));let r=t.match(o);if(!r)return console.error("Invalid log line format:",t),null;const[,s,i,E,l]=r,c=new RegExp("Log Version (".concat(n,")"));if(r=l.match(c),r){const[,t]=r;return console.log("Log Version ".concat(t)),{type:e.LOG_VERSION,date:s,time:i,timezone:E,logVersion:t}}const A=new RegExp("Logged in player is (".concat(n,")"));if(r=l.match(A),r){const[,t]=r;return{type:e.LOGGED_IN_PLAYER,date:s,time:i,timezone:E,loggedInPlayer:t}}const m=new RegExp("Boosted levels are \\[(\\d+), (\\d+), (\\d+), (\\d+), (\\d+), (\\d+), (\\d+)\\]");if(r=l.match(m),r){const[,t,n,a,o,l,c,A]=r.map(Number);return{type:e.BOOSTED_LEVELS,date:s,time:i,timezone:E,boostedLevels:{attack:t,strength:n,defence:a,ranged:o,magic:l,hitpoints:c,prayer:A}}}const g=new RegExp("Player equipment is (".concat(n,")"));if(r=l.match(g),r){const[,t]=r,n=JSON.parse(t).map((e=>e.toString()));return{type:e.PLAYER_EQUIPMENT,date:s,time:i,timezone:E,playerEquipment:n}}const M=new RegExp("^(".concat(n,") dies"));if(r=l.match(M),r){const[,t]=r;return{type:e.DEATH,date:s,time:i,timezone:E,target:t}}const p=new RegExp("^(".concat(n,") changes target to (").concat(n,")"));if(r=l.match(p),r){const[,t,n]=r;return{type:e.TARGET_CHANGE,date:s,time:i,timezone:E,source:t,target:n}}const u=new RegExp("^(".concat(a,")\t(").concat(a,")\t(").concat(a,")"));if(r=l.match(u),!r)return console.error("Invalid log line format:",t),null;const[,_,d,L]=r;return{type:e.DAMAGE,date:s,time:i,timezone:E,target:_,hitsplatName:d,damageAmount:parseInt(L,10)}};function E(t,n){try{const E=t.split("\n");let l=0,c=[];for(const e of E){const t=i(e.trim());if(t&&c.push(t),l++,n&&l%200===0){n(l/E.length*50)}}let A=function(t,n){const i=t.length;let E=0;const l=[];let c,A,m=null,g="",M=null,p=0;for(const u of t){if(u.type===e.LOGGED_IN_PLAYER&&(g=u.loggedInPlayer),u.type===e.BOOSTED_LEVELS&&(c=u.boostedLevels),u.type===e.PLAYER_EQUIPMENT&&(A=u.playerEquipment),m&&M&&a(u.time)-a(M.time)>6e4&&(m.data=m.data.filter(((e,t)=>t<=M.index)),m.name+=" - Incomplete",m.lastLine=m.data[m.data.length-1],l.push(m),m=null,M=null),!m&&u.type===e.DAMAGE&&s(u)&&u.target!==g){p=a(u.time),u.fightTime=o(0);const t=[];c&&t.push({type:e.BOOSTED_LEVELS,date:u.date,time:u.time,timezone:u.timezone,boostedLevels:c,fightTime:o(0)}),A&&t.push({type:e.PLAYER_EQUIPMENT,date:u.date,time:u.time,timezone:u.timezone,playerEquipment:A,fightTime:o(0)}),m={name:u.target,enemies:[u.target],data:[...t,u],loggedInPlayer:g,firstLine:u,lastLine:u}}else if(m){"target"in u&&r.includes(u.target)&&m.name!==u.target&&(m.name=u.target),u.type===e.DAMAGE&&s(u)&&u.target!==g&&!m.enemies.includes(u.target)&&m.enemies.push(u.target);const t=a(u.time);u.fightTime=o(t-p),m.data.push(u)}m&&u.type===e.DAMAGE&&s(u)&&(M={time:u.time,index:m.data.length-1}),u.type===e.DEATH&&u.target&&(!m||u.target!==m.name&&u.target!==m.loggedInPlayer||(m.lastLine=u,l.push(m),m=null)),E++,n&&E%200===0&&n(50+E/i*50)}return m&&(m.lastLine=m.data[m.data.length-1],l.push(m)),l.filter((t=>t.data.some((t=>t.type===e.DAMAGE&&s(t)))))}(c,n);return A}catch(E){return console.error("Error parsing file content:",E),null}}let l=null;onmessage=e=>{const{type:t,fileContent:n,index:a}=e.data;if("parse"===t)!function(e){var t;l=E(e,(e=>{postMessage({type:"progress",progress:e})}));const n={fightNames:(null===(t=l)||void 0===t?void 0:t.map((e=>e.name)))||[],firstResult:l[0]};postMessage({type:"parseResult",parseResultMessage:n})}(n);else if("getItem"===t){const e=function(e){return l&&e>=0&&e<l.length?l[e]:null}(a);postMessage({type:"item",item:e})}}})();
//# sourceMappingURL=220.86e9a12c.chunk.js.map